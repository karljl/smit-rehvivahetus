error_log  /var/log/nginx/error.log;

#Provides the configuration file context in which the directives that affect connection processing are specified.
events {
    # Sets the maximum number of simultaneous connections that can be opened by a worker process.
    worker_connections 4096;
    # Tells the worker to accept multiple connections at a time
    multi_accept on;
}

http {

    log_format json '{ '
                      '"request_id": "$request_id", '
                      '"http_method": "$request_method", '
                      '"http_uri": "$request_uri", '
                      '"request_time": "$request_time", '
                      '"timestamp": "$time_iso8601", '
                      '"status_code": "$status", '
                      '"client_ip": "$remote_addr", '
                      '"remote_user": "$remote_user", '
                      '"bytes_sent": "$bytes_sent", '
                      '"http_referer": "$http_referer", '
                      '"user_agent": "$http_user_agent", '
                      '"gzip_ratio": "$gzip_ratio", '
                      '"request_host": "$http_host", '
                      '"unique-id": "$http_x_unique_id" '
                    '}';

    include   /etc/nginx/mime.types;

    server {
        listen       80;
        server_name  localhost;

        access_log /dev/stdout json;

        root    /usr/share/nginx/html;
        index   index.html index.htm;

        location /api/ {
            proxy_pass http://backend:8000;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to redirecting to index.html
            try_files $uri $uri/ /index.html;
        }

        # Media: images, icons, video, audio, HTC
        location ~* \.(?:jpg|jpeg|gif|png|ico|cur|gz|svg|svgz|mp4|ogg|ogv|webm|htc)$ {
          expires 1M;
          access_log off;
          add_header Cache-Control "public";
        }

        # Javascript and CSS files
        location ~* \.(?:css|js)$ {
            try_files $uri =404;
            expires 1y;
            access_log off;
            add_header Cache-Control "public";
        }

        # Any route containing a file extension (e.g. /devicesfile.js)
        location ~ ^.+\..+$ {
            try_files $uri =404;
        }
    }
}